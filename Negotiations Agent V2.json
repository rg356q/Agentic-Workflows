{
  "createdAt": "2025-08-04T02:23:44.992Z",
  "updatedAt": "2025-08-04T18:29:25.000Z",
  "id": "kyMXFc8OGkMsL57J",
  "name": "Negotiations Agent V2",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -416,
        -224
      ],
      "id": "89c7782d-db04-4c2c-97b5-57873625e8a3",
      "name": "When chat message received",
      "webhookId": "84e54afa-c35e-4780-9769-a7fdab6dafad"
    },
    {
      "parameters": {
        "content": "## Negotiation Agent\n",
        "height": 896,
        "width": 1136,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -640,
        -336
      ],
      "typeVersion": 1,
      "id": "1b17734a-be64-4e5e-895b-3c58c5f308bf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        336,
        432
      ],
      "id": "4a11f169-e52b-41db-a637-33734d38853b",
      "name": "Embeddings",
      "credentials": {
        "ollamaApi": {
          "id": "uGyv0CnMjzGVPVm2",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "toolOptions": {},
        "retrievalOptions": {
          "documentsToRetrieve": 100,
          "documentsToReturn": 15
        },
        "queryStrategy": {
          "strategyType": "multi_step_query"
        },
        "options": {}
      },
      "type": "n8n-nodes-query-retriever-rerank.queryRetrieverRerank",
      "typeVersion": 1,
      "position": [
        64,
        0
      ],
      "id": "44cbfe66-a8eb-4604-a8a1-9e7937912110",
      "name": "Query Retriever with Rerank"
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -160,
        208
      ],
      "id": "33a9a5aa-7b11-4d86-9d0f-f7394d68e074",
      "name": "Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "ACniCfkyK3Te0lUX",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=## Role\n\nYou are a *Contextual Retrieval-Augmented Generation (RAG) Agent*. Your core responsibility is to answer user queries using the most relevant information retrieved from your internal vector database.\nYou **do not** use the internet under any circumstances.\n\n## Users\n\nYour users are professionals seeking accurate and context-rich answers to domain-specific questions. They expect **precise, well-sourced, and concise** responses.\n\n---\n\n## Context & Behavior\n\n* Always search the supplied tools for supporting context before answering.\n\n* Retrieve the top relevant chunks and **summarize or quote them** directly when responding.\n\n* If no relevant information is found, respond honestly:\n\n  > “I couldn’t find anything relevant in the available sources.”\n\n* **Never fabricate** information or use generic speculation.\n\n* Maintain a tone that is **clear, neutral, and professional**.\n\n* Responses should be *well-structured* and use Markdown formatting when helpful (e.g., for lists, headers, quotes).\n\n---\n\n## Tools Available\n\n### # RAG look up\n\nUse this tool to retrieve relevant documents from the internal knowledge base.\n**Use this for all lookup queries** instead of external web search.\n\n---\n\n## Error Handling\n- If the information cannot be found using the provided instructions respond with:  \n  “I’m sorry, I couldn’t find relevant information based on your documents.”\n\n---\n\n## Output Rules\n\n* Always respond in **Markdown**\n* **Include citations or quotes** from retrieved content when possible\n* Avoid unnecessary verbosity or repetition\n* Example format:\n\n```markdown\n### Answer  \n[Summary of response]\n\n> \"Direct quote from retrieved source\"  \n— *Source Title, Section*\n\n---\n\n### Notes  \n- Retrieved from internal knowledge base.  \n```\n\n---"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -160,
        -224
      ],
      "id": "fa6cca3d-1838-49d2-852d-f56cf1bba425",
      "name": "RAG AI Agent"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -64,
        0
      ],
      "id": "b767f934-b2d6-49ec-8608-2f52f905f8c7",
      "name": "Chat Memory",
      "credentials": {
        "postgres": {
          "id": "H80q6n4NqPtinQNu",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:3b",
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -192,
        0
      ],
      "id": "066b7b18-3891-40fd-8828-336e4eaaa0de",
      "name": "llama",
      "credentials": {
        "ollamaApi": {
          "id": "uGyv0CnMjzGVPVm2",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:3b",
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        160,
        208
      ],
      "id": "a19af02a-2e3f-4c32-90d7-cf8c8447d6a9",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "uGyv0CnMjzGVPVm2",
          "name": "Ollama account"
        }
      }
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Query Retriever with Rerank",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Query Retriever with Rerank",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Query Retriever with Rerank": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "llama": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "Query Retriever with Rerank",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "f85404cc-529c-4b4c-9293-646458fdc199",
  "triggerCount": 0,
  "tags": []
}