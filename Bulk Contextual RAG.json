{
  "createdAt": "2025-07-31T22:04:59.477Z",
  "updatedAt": "2025-08-01T14:34:57.000Z",
  "id": "4RToZmdPhLAAp9dv",
  "name": "Bulk Contextual RAG",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -496,
        -320
      ],
      "id": "cf14b633-13b4-4e05-99ff-83ed67552ee5",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "fileSelector": "=D:\\\\Emory\\\\AI Automation\\\\Negotiations Content\\\\bulk\\\\*.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -272,
        -320
      ],
      "id": "423bbe8f-f76d-4a5b-beaa-9d39fda1604f",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -48,
        -320
      ],
      "id": "ce4b84fe-147a-4764-aa26-93b3316bebb0",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        176,
        -320
      ],
      "id": "c7d0928e-5c09-4dca-8717-2b8ae25720aa",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const chunks = [];\nconst chunkSize = 400;\nconst chunkOverlap = 0;\n\nconst text = $json.data[0].content.replace(/\\n/, '');\n\nfor (let i=0, j=Math.round(text.length/chunkSize); i<j; i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"
      },
      "id": "b69ee88d-7695-4b52-9217-43e8af5d8b76",
      "name": "Create Chunks From Doc",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -320
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "chunks",
        "options": {
          "destinationFieldName": "chunk"
        }
      },
      "id": "176d2834-12e2-4cb8-926d-a1f4a0b9b0f5",
      "name": "Chunks To List",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        624,
        -320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get data from n8n nodes\nlet fileContent = $('Extract from File').first().json.data[0].content;\nconst batchChunks = $('Chunks To List').all(); // assumes multiple chunks\n\n// Trim file content to a max length of 20,000 characters\nif (fileContent.length > 20000) {\n  fileContent = fileContent.substring(0, 20000);\n}\n\n// Construct prompt template\nconst promptTemplate = (doc, chunk) => `\n<document>\n${doc}\n</document>\nHere is the chunk we want to situate within the whole document \n<chunk>\n${chunk}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else.\n`;\n\n// Build an array of JSON lines\nconst jsonLines = batchChunks.map((chunkItem, index) => {\n  const chunkText = chunkItem.json.chunk;\n  const prompt = promptTemplate(fileContent, chunkText).trim();\n\n  const request = {\n    custom_id: `request-${index + 1}`, // unique ID\n    method: 'POST',\n    url: '/v1/chat/completions',\n    body: {\n      model: 'gpt-4.1-nano-2025-04-14',\n      messages: [\n        { role: 'user', content: prompt },\n        { role: \"system\", content: \"You are a helpful assistant that provides concise contextual information.\"}\n      ],\n      temperature: 0.2\n    }\n  };\n\n  return JSON.stringify(request);\n});\n\n// Join all JSON lines into a single text block\nconst jsonlOutput = jsonLines.join('\\n');\n\n// Return a single item with the complete .jsonl content\nreturn { jsonlOutput };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        848,
        -320
      ],
      "id": "d69ccc68-a621-4489-b9e1-b4c004cf4583",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "jsonlOutput",
        "options": {
          "fileName": "N2Batch.jsonl"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        400,
        -512
      ],
      "id": "5c47eb6c-1f5d-40a5-9863-6ee7fe999ded",
      "name": "Convert to File",
      "executeOnce": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/batches",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input_file_id",
              "value": "={{ $json.id }}"
            },
            {
              "name": "endpoint",
              "value": "/v1/chat/completions"
            },
            {
              "name": "completion_window",
              "value": "24h"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        848,
        -512
      ],
      "id": "a5ebcc42-5a7b-46a9-8897-fd513536b99e",
      "name": "Create the Batch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a02e7e92-0c3a-41f2-807f-0315e6a893d9",
              "name": "jsonlOutput",
              "value": "={{ $json.jsonlOutput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1072,
        -256
      ],
      "id": "80cef8d1-598b-44e6-8551-600b32afde15",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1072,
        -512
      ],
      "id": "27f49c10-7ab1-4d01-a721-14a036872b73",
      "name": "Wait",
      "webhookId": "3b3035a3-c248-46a0-a08c-a1e7cd59bc9a"
    },
    {
      "parameters": {
        "url": "=https://api.openai.com/v1/batches/{{ $json.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1296,
        -512
      ],
      "id": "e6bfcece-c7df-4561-9bde-611a6706654b",
      "name": "Validate if Batch is Accepted"
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/files/file-HV8B146DQVkJxx2w3iTC9t/content",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -496,
        -32
      ],
      "id": "cc091d65-8418-407c-9b6a-3e311a41d2d1",
      "name": "Retrieve the batch results"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/files",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "purpose",
              "value": "batch"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        624,
        -512
      ],
      "id": "5243c8f6-6a79-431b-b059-4c22398ada39",
      "name": "Upload file"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Create Chunks From Doc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Chunks From Doc": {
      "main": [
        [
          {
            "node": "Chunks To List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chunks To List": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create the Batch": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Validate if Batch is Accepted",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Create the Batch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "c588287b-d265-4d48-a3d7-7fedc390df1a",
  "triggerCount": 0,
  "tags": []
}