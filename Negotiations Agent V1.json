{
  "createdAt": "2025-08-04T18:25:17.472Z",
  "updatedAt": "2025-08-04T18:33:43.000Z",
  "id": "JBtJJTj7dk0o2USG",
  "name": "Negotiations Agent V1",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -160,
        48
      ],
      "id": "2ad1d6cc-b3df-4629-b444-120e2ec0a682",
      "name": "When chat message received",
      "webhookId": "84e54afa-c35e-4780-9769-a7fdab6dafad"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=## Role\n\nYou are a *Contextual Retrieval-Augmented Generation (RAG) Agent*. Your core responsibility is to answer user queries using the most relevant information retrieved from your internal vector database.\nYou **do not** use the internet under any circumstances.\n\n## Users\n\nYour users are professionals seeking accurate and context-rich answers to domain-specific questions. They expect **precise, well-sourced, and concise** responses.\n\n---\n\n## Context & Behavior\n\n* Always search the supplied tools for supporting context before answering.\n\n* Retrieve the top relevant chunks and **summarize or quote them** directly when responding.\n\n* If no relevant information is found, respond honestly:\n\n  > “I couldn’t find anything relevant in the available sources.”\n\n* **Never fabricate** information or use generic speculation.\n\n* Maintain a tone that is **clear, neutral, and professional**.\n\n* Responses should be *well-structured* and use Markdown formatting when helpful (e.g., for lists, headers, quotes).\n\n---\n\n## Tools Available\n\n### # RAG look up\n\nUse this tool to retrieve relevant documents from the internal knowledge base.\n**Use this for all lookup queries** instead of external web search.\n\n---\n\n## Error Handling\n- If the information cannot be found using the provided instructions respond with:  \n  “I’m sorry, I couldn’t find relevant information based on your documents.”\n\n---\n\n## Output Rules\n\n* Always respond in **Markdown**\n* **Include citations or quotes** from retrieved content when possible\n* Avoid unnecessary verbosity or repetition\n* Example format:\n\n```markdown\n### Answer  \n[Summary of response]\n\n> \"Direct quote from retrieved source\"  \n— *Source Title, Section*\n\n---\n\n### Notes  \n- Retrieved from internal knowledge base.  \n```\n\n---"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        112,
        -64
      ],
      "id": "302d69ee-5231-4935-a965-9bdcac4ea261",
      "name": "RAG AI Agent"
    },
    {
      "parameters": {
        "content": "## Negotiation Agent\n",
        "height": 544,
        "width": 1040,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        -112
      ],
      "typeVersion": 1,
      "id": "33004131-3f5c-4591-b244-ad27fc9f305e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Use RAG to look up information in the knowledge base.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 50,
        "includeDocumentMetadata": false,
        "useReranker": true,
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        416,
        128
      ],
      "id": "8c070f1b-f231-4bca-b9f7-6cecc7a7e3a2",
      "name": "RAG look up",
      "credentials": {
        "supabaseApi": {
          "id": "ACniCfkyK3Te0lUX",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano-2025-04-14"
        },
        "options": {
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        96,
        272
      ],
      "id": "beeefb9e-6c4c-4c5f-8dcc-246042f0adbe",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "2Z9Rn8vgw8FQe5w3",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:3b",
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -48,
        224
      ],
      "id": "84eddeb4-2f28-486e-a9cb-a7dafe4733bd",
      "name": "Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "uGyv0CnMjzGVPVm2",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        464,
        320
      ],
      "id": "70b222a1-27e2-4d61-b492-ffd6257f0010",
      "name": "Embeddings",
      "credentials": {
        "ollamaApi": {
          "id": "uGyv0CnMjzGVPVm2",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        240,
        208
      ],
      "id": "47c06274-582a-4648-9bec-157d8491a5d8",
      "name": "Chat Memory",
      "credentials": {
        "postgres": {
          "id": "H80q6n4NqPtinQNu",
          "name": "Postgres account"
        }
      }
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG look up": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "RAG look up",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "7f6d81c4-d3ff-464f-b9d3-333bdc2d0551",
  "triggerCount": 0,
  "tags": []
}